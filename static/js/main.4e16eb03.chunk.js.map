{"version":3,"sources":["context.js","pages/Modal.jsx","components/TopBar.jsx","components/AddNewTask.jsx","components/Task.jsx","components/TaskList.jsx","pages/Main.jsx","pages/NotFoundPage.jsx","components/Header.jsx","components/Layout.jsx","App.js","index.js"],"names":["MyContext","React","createContext","Modal","editingTodo","useLocation","state","navigate","useNavigate","editTask","useContext","useState","text","inputText","setinputText","className","to","onSubmit","e","preventDefault","console","log","id","submitHandler","type","placeholder","autoFocus","value","onChange","target","TopBar","AddNewTask","addTask","userInput","setUserInput","onKeyDown","key","enterKeyHandler","onClick","alert","Task","todo","removeTask","toggleTask","taskTextRef","useRef","ref","done","cursor","color","TaskList","data","map","Main","NotFoundPage","Header","Layout","LOCAL_STORAGE_KEY","App","setData","useEffect","storageData","JSON","parse","localStorage","getItem","setItem","stringify","Provider","newItem","Date","toISOString","filter","item","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e16eb03.chunk.js","sourcesContent":["import React from 'react';\n\nexport const MyContext = React.createContext()","import React, { useState, useContext } from 'react'\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\nimport { BsFillArrowLeftCircleFill } from 'react-icons/bs'\nimport { MyContext } from '../context'\n\nconst Modal = () => {\n  const location = useLocation()\n  const { editingTodo } = location.state\n  const navigate = useNavigate()\n  const { editTask } = useContext(MyContext)\n  const [inputText, setinputText] = useState(editingTodo.text)\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    console.log('submited')\n    editTask(editingTodo.id, inputText)\n    navigate('/')\n  }\n\n  return (\n    <div className=\"Modal\">\n      <Link to=\"/\">\n        <BsFillArrowLeftCircleFill />\n      </Link>\n      <form onSubmit={(e) => submitHandler(e)}>\n        <input\n          type=\"text\"\n          placeholder=\"enter new task\"\n          autoFocus\n          value={inputText}\n          onChange={(e) => setinputText(e.target.value)}\n        />\n        <button type=\"submit\">Save Task</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Modal\n","const TopBar = () => {\n  return (\n    <div className=\"TopBar\">\n      <h2>Mike's Todo</h2>\n    </div>\n  )\n}\n\nexport default TopBar\n","import React, { useState, useContext } from 'react'\nimport { MyContext } from '../context'\n\nconst AddNewTask = () => {\n  const { addTask } = useContext(MyContext)\n  const [userInput, setUserInput] = useState('')\n\n  const enterKeyHandler = (e) => {\n    if (e.key === 'Enter') {\n      addTask(userInput)\n      setUserInput('')\n    }\n  }\n\n  const addTaskHandler = () => {\n    if (userInput) {\n      addTask(userInput)\n      setUserInput('')\n    } else {\n      alert('enter task text!')\n    }\n  }\n\n  return (\n    <div className=\"AddNewTask\">\n      <div className=\"container\">\n        <input\n          type=\"text\"\n          value={userInput}\n          onChange={(e) => setUserInput(e.target.value)}\n          onKeyDown={(e) => enterKeyHandler(e)}\n          autoFocus\n        />\n        <button onClick={addTaskHandler}>Add New Task</button>\n      </div>\n    </div>\n  )\n}\n\nexport default AddNewTask\n","import React, { useContext, useRef } from 'react'\nimport { Link } from 'react-router-dom'\nimport { FaEdit } from 'react-icons/fa'\nimport { MyContext } from '../context'\n\nconst Task = ({ todo }) => {\n  const { removeTask, toggleTask, editTask } = useContext(MyContext)\n  const taskTextRef = useRef(null)\n\n  // const editHandler = (id) => {\n  //   // console.log(taskTextRef.current)\n  //   // taskTextRef.current.style.color = 'green'\n  //   // console.log('todo text:', todo.text)\n  //   editTask(id)\n  // }\n  return (\n    <div className=\"Task\">\n      <div className=\"task-container\">\n        <input\n          className=\"toggle-task\"\n          type=\"checkbox\"\n          onChange={() => toggleTask(todo.id)}\n        />\n        <span\n          ref={taskTextRef}\n          className={todo.done ? 'text line-through' : 'text'}\n        >\n          {todo.text}\n        </span>\n        <Link to='modal' state={{editingTodo: todo}}>\n          <FaEdit\n            className=\"edit-task\"\n            cursor=\"pointer\"\n            color=\"green\"\n            // onClick={() => editHandler(todo.id)}\n          />\n        </Link>\n\n        <span className=\"remove-task\" onClick={() => removeTask(todo.id)}>\n          &times;\n        </span>\n      </div>\n    </div>\n  )\n}\n\nexport default Task\n","import { useContext } from 'react'\nimport { MyContext } from '../context'\nimport Task from './Task'\n\nconst TaskList = () => {\n  const { data } = useContext(MyContext)\n\n  return (\n    <div className=\"TaskList\">\n      {data.map((todo) => (\n        <Task key={todo.id} todo={todo} />\n      ))}\n    </div>\n  )\n}\n\nexport default TaskList\n","import TopBar from '../components/TopBar'\nimport AddNewTask from '../components/AddNewTask'\nimport TaskList from '../components/TaskList'\n\nconst Main = () => {\n  return (\n    <div className=\"Main\">\n      <TopBar />\n      <AddNewTask />\n      <TaskList />\n    </div>\n  )\n}\n\nexport default Main\n","const NotFoundPage = () => {\n  return (\n    <div>\n      <h1>Такой страницы не существует</h1>\n    </div>\n  )\n}\n\nexport default NotFoundPage\n","import { Link } from \"react-router-dom\"\n\nconst Header = () => {\n  return (\n    <div className=\"Header\">\n      <div className=\"menu-wrapper\">\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/modal\">Modal</Link>\n      </div>\n    </div>\n  )\n}\n\nexport default Header\n","import { Outlet } from \"react-router-dom\"\nimport Header from './Header'\n\nconst Layout = () => {\n  return (\n    <div>\n      <Header></Header>\n      <Outlet></Outlet>\n    </div>\n  )\n}\n\nexport default Layout\n","import React, { useState, useEffect } from 'react'\nimport { Routes, Route } from 'react-router-dom'\n// import { db } from './db'\nimport { MyContext } from './context'\nimport './App.scss'\nimport Modal from './pages/Modal'\nimport Main from './pages/Main'\nimport NotFoundPage from './pages/NotFoundPage'\nimport Layout from './components/Layout'\n\nconst LOCAL_STORAGE_KEY = 'my-react-todo-list'\n\nfunction App() {\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    const storageData = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if (storageData) {\n      setData(storageData)\n    }\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(data))\n  }, [data])\n\n  const addTask = (userInput) => {\n    if (userInput) {\n      const newItem = {\n        id: new Date().toISOString(),\n        text: userInput,\n        done: false,\n      }\n      setData([...data, newItem])\n    }\n  }\n\n  const removeTask = (id) => {\n    setData([...data.filter((item) => item.id !== id)])\n  }\n\n  const toggleTask = (id) => {\n    setData(\n      data.map((item) => {\n        return item.id === id ? { ...item, done: !item.done } : { ...item }\n      })\n    )\n  }\n\n  const editTask = (id, text) => {\n    console.log('edited')\n    setData(data.map(item => item.id === id ? {...item, text: text} : {...item}\n      ))\n  }\n\n  return (\n    <MyContext.Provider value={{ data, addTask, removeTask, toggleTask, editTask }}>\n      <div className=\"App\">\n        <Routes>\n          <Route path=\"/\" element={<Layout />}>\n            <Route index element={<Main />}></Route>\n            <Route path=\"modal\" element={<Modal />}></Route>\n            <Route path=\"*\" element={<NotFoundPage />}></Route>\n          </Route>\n        </Routes>\n      </div>\n    </MyContext.Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}